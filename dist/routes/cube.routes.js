"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CubeRoutes = void 0;
const common_routes_config_1 = require("../common/common.routes.config");
const cube_controller_1 = require("../controllers/cube.controller");
class CubeRoutes extends common_routes_config_1.CommonRoutesConfig {
    constructor(app) {
        super(app, 'CubeRoutes');
        this.cube = new cube_controller_1.CubeController();
    }
    configureRoutes() {
        this.app.route('/cube')
            .get((req, res) => {
            res.status(200).send('List of cube options');
        })
            .post((req, res) => {
            res.status(200).send('Post to cube');
        });
        //CRUD for cube
        this.app.route('/cube/:cubeId')
            .all((req, res, next) => {
            next();
        })
            .get((req, res) => {
            let cubeId = parseInt(req.params.cubeId);
            this.cube.getCube(cubeId);
            res.status(200).send(`GET request for id ${req.params.cubeId}`);
        })
            .post((req, res) => {
            res.status(200).send(`POST request for id ${req.params.cubeId}`);
        })
            .patch((req, res) => {
            //Updating cube with id
            res.status(200).send(`PATCH request for id ${req.params.cubeId}`);
        })
            .delete((req, res) => {
            let cubeId = parseInt(req.params.cubeId);
            this.cube.deleteCube(cubeId);
            res.status(200).send(`DELETE request for id ${req.params.cubeId}`);
        });
        this.app.route('/cube/transition')
            .post((req, res) => {
            let top = req.query.top;
            let bottom = req.query.bottom;
            let mode = req.query.mode;
            let interval = parseInt(req.query.interval);
            let steps = parseInt(req.query.steps);
            let loop = Boolean(req.query.loop);
            let resp = this.cube.transition(top, bottom, mode, interval, steps, loop);
            res.status(200).send(resp);
        });
        this.app.route('/cube/text')
            .post((req, res) => {
            let message = req.query.message;
            let background = parseInt(req.query.interval);
            let foreground = parseInt(req.query.steps);
            let resp = this.cube.text(message, background, foreground);
            res.status(200).send(resp);
        });
        this.app.route('/cube/cube')
            .post((req, res) => {
            let colors = req.query.colors;
            let mode = req.query.mode;
            let resp = this.cube.drawCube(colors, mode);
            res.status(200).send(resp);
        });
        this.app.route('/cube/power')
            .post((req, res) => {
            //Power on/off the cube
            res.status(200).send(`POST request for id ${req.params.cubeId}`);
        });
        return this.app;
    }
}
exports.CubeRoutes = CubeRoutes;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3ViZS5yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9yb3V0ZXMvY3ViZS5yb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseUVBQW9FO0FBRXBFLG9FQUFnRTtBQUdoRSxNQUFhLFVBQVcsU0FBUSx5Q0FBa0I7SUFHOUMsWUFBWSxHQUF3QjtRQUNoQyxLQUFLLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBQyxDQUFBO1FBRXhCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxnQ0FBYyxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVELGVBQWU7UUFDWCxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUM7YUFDbEIsR0FBRyxDQUFDLENBQUMsR0FBb0IsRUFBRSxHQUFxQixFQUFFLEVBQUU7WUFDakQsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNqRCxDQUFDLENBQUM7YUFDRCxJQUFJLENBQUMsQ0FBQyxHQUFvQixFQUFFLEdBQW9CLEVBQUUsRUFBRTtZQUVqRCxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN6QyxDQUFDLENBQUMsQ0FBQztRQUVQLGVBQWU7UUFDZixJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUM7YUFDMUIsR0FBRyxDQUFDLENBQUMsR0FBb0IsRUFBRSxHQUFxQixFQUFFLElBQTBCLEVBQUUsRUFBRTtZQUM3RSxJQUFJLEVBQUUsQ0FBQztRQUNYLENBQUMsQ0FBQzthQUNELEdBQUcsQ0FBQyxDQUFDLEdBQW9CLEVBQUUsR0FBcUIsRUFBRSxFQUFFO1lBQ2pELElBQUksTUFBTSxHQUFXLFFBQVEsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQWdCLENBQUMsQ0FBQTtZQUUxRCxJQUFJLENBQUMsSUFBSSxDQUFD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